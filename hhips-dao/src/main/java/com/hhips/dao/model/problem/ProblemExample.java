package com.hhips.dao.model.problem;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class ProblemExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public ProblemExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    protected abstract static class GeneratedCriteria implements Serializable {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdproblemIsNull() {
            addCriterion("idproblem is null");
            return (Criteria) this;
        }

        public Criteria andIdproblemIsNotNull() {
            addCriterion("idproblem is not null");
            return (Criteria) this;
        }

        public Criteria andIdproblemEqualTo(Integer value) {
            addCriterion("idproblem =", value, "idproblem");
            return (Criteria) this;
        }

        public Criteria andIdproblemNotEqualTo(Integer value) {
            addCriterion("idproblem <>", value, "idproblem");
            return (Criteria) this;
        }

        public Criteria andIdproblemGreaterThan(Integer value) {
            addCriterion("idproblem >", value, "idproblem");
            return (Criteria) this;
        }

        public Criteria andIdproblemGreaterThanOrEqualTo(Integer value) {
            addCriterion("idproblem >=", value, "idproblem");
            return (Criteria) this;
        }

        public Criteria andIdproblemLessThan(Integer value) {
            addCriterion("idproblem <", value, "idproblem");
            return (Criteria) this;
        }

        public Criteria andIdproblemLessThanOrEqualTo(Integer value) {
            addCriterion("idproblem <=", value, "idproblem");
            return (Criteria) this;
        }

        public Criteria andIdproblemIn(List<Integer> values) {
            addCriterion("idproblem in", values, "idproblem");
            return (Criteria) this;
        }

        public Criteria andIdproblemNotIn(List<Integer> values) {
            addCriterion("idproblem not in", values, "idproblem");
            return (Criteria) this;
        }

        public Criteria andIdproblemBetween(Integer value1, Integer value2) {
            addCriterion("idproblem between", value1, value2, "idproblem");
            return (Criteria) this;
        }

        public Criteria andIdproblemNotBetween(Integer value1, Integer value2) {
            addCriterion("idproblem not between", value1, value2, "idproblem");
            return (Criteria) this;
        }

        public Criteria andProblemlevelIsNull() {
            addCriterion("problemlevel is null");
            return (Criteria) this;
        }

        public Criteria andProblemlevelIsNotNull() {
            addCriterion("problemlevel is not null");
            return (Criteria) this;
        }

        public Criteria andProblemlevelEqualTo(Integer value) {
            addCriterion("problemlevel =", value, "problemlevel");
            return (Criteria) this;
        }

        public Criteria andProblemlevelNotEqualTo(Integer value) {
            addCriterion("problemlevel <>", value, "problemlevel");
            return (Criteria) this;
        }

        public Criteria andProblemlevelGreaterThan(Integer value) {
            addCriterion("problemlevel >", value, "problemlevel");
            return (Criteria) this;
        }

        public Criteria andProblemlevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("problemlevel >=", value, "problemlevel");
            return (Criteria) this;
        }

        public Criteria andProblemlevelLessThan(Integer value) {
            addCriterion("problemlevel <", value, "problemlevel");
            return (Criteria) this;
        }

        public Criteria andProblemlevelLessThanOrEqualTo(Integer value) {
            addCriterion("problemlevel <=", value, "problemlevel");
            return (Criteria) this;
        }

        public Criteria andProblemlevelIn(List<Integer> values) {
            addCriterion("problemlevel in", values, "problemlevel");
            return (Criteria) this;
        }

        public Criteria andProblemlevelNotIn(List<Integer> values) {
            addCriterion("problemlevel not in", values, "problemlevel");
            return (Criteria) this;
        }

        public Criteria andProblemlevelBetween(Integer value1, Integer value2) {
            addCriterion("problemlevel between", value1, value2, "problemlevel");
            return (Criteria) this;
        }

        public Criteria andProblemlevelNotBetween(Integer value1, Integer value2) {
            addCriterion("problemlevel not between", value1, value2, "problemlevel");
            return (Criteria) this;
        }

        public Criteria andProblemdetailIsNull() {
            addCriterion("problemdetail is null");
            return (Criteria) this;
        }

        public Criteria andProblemdetailIsNotNull() {
            addCriterion("problemdetail is not null");
            return (Criteria) this;
        }

        public Criteria andProblemdetailEqualTo(String value) {
            addCriterion("problemdetail =", value, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailNotEqualTo(String value) {
            addCriterion("problemdetail <>", value, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailGreaterThan(String value) {
            addCriterion("problemdetail >", value, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailGreaterThanOrEqualTo(String value) {
            addCriterion("problemdetail >=", value, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailLessThan(String value) {
            addCriterion("problemdetail <", value, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailLessThanOrEqualTo(String value) {
            addCriterion("problemdetail <=", value, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailLike(String value) {
            addCriterion("problemdetail like", value, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailNotLike(String value) {
            addCriterion("problemdetail not like", value, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailIn(List<String> values) {
            addCriterion("problemdetail in", values, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailNotIn(List<String> values) {
            addCriterion("problemdetail not in", values, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailBetween(String value1, String value2) {
            addCriterion("problemdetail between", value1, value2, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemdetailNotBetween(String value1, String value2) {
            addCriterion("problemdetail not between", value1, value2, "problemdetail");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridIsNull() {
            addCriterion("problemchapterid is null");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridIsNotNull() {
            addCriterion("problemchapterid is not null");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridEqualTo(Integer value) {
            addCriterion("problemchapterid =", value, "problemchapterid");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridNotEqualTo(Integer value) {
            addCriterion("problemchapterid <>", value, "problemchapterid");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridGreaterThan(Integer value) {
            addCriterion("problemchapterid >", value, "problemchapterid");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridGreaterThanOrEqualTo(Integer value) {
            addCriterion("problemchapterid >=", value, "problemchapterid");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridLessThan(Integer value) {
            addCriterion("problemchapterid <", value, "problemchapterid");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridLessThanOrEqualTo(Integer value) {
            addCriterion("problemchapterid <=", value, "problemchapterid");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridIn(List<Integer> values) {
            addCriterion("problemchapterid in", values, "problemchapterid");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridNotIn(List<Integer> values) {
            addCriterion("problemchapterid not in", values, "problemchapterid");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridBetween(Integer value1, Integer value2) {
            addCriterion("problemchapterid between", value1, value2, "problemchapterid");
            return (Criteria) this;
        }

        public Criteria andProblemchapteridNotBetween(Integer value1, Integer value2) {
            addCriterion("problemchapterid not between", value1, value2, "problemchapterid");
            return (Criteria) this;
        }

        public Criteria andProblemindexIsNull() {
            addCriterion("problemindex is null");
            return (Criteria) this;
        }

        public Criteria andProblemindexIsNotNull() {
            addCriterion("problemindex is not null");
            return (Criteria) this;
        }

        public Criteria andProblemindexEqualTo(String value) {
            addCriterion("problemindex =", value, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexNotEqualTo(String value) {
            addCriterion("problemindex <>", value, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexGreaterThan(String value) {
            addCriterion("problemindex >", value, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexGreaterThanOrEqualTo(String value) {
            addCriterion("problemindex >=", value, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexLessThan(String value) {
            addCriterion("problemindex <", value, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexLessThanOrEqualTo(String value) {
            addCriterion("problemindex <=", value, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexLike(String value) {
            addCriterion("problemindex like", value, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexNotLike(String value) {
            addCriterion("problemindex not like", value, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexIn(List<String> values) {
            addCriterion("problemindex in", values, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexNotIn(List<String> values) {
            addCriterion("problemindex not in", values, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexBetween(String value1, String value2) {
            addCriterion("problemindex between", value1, value2, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemindexNotBetween(String value1, String value2) {
            addCriterion("problemindex not between", value1, value2, "problemindex");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleIsNull() {
            addCriterion("problemmodule is null");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleIsNotNull() {
            addCriterion("problemmodule is not null");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleEqualTo(Integer value) {
            addCriterion("problemmodule =", value, "problemmodule");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleNotEqualTo(Integer value) {
            addCriterion("problemmodule <>", value, "problemmodule");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleGreaterThan(Integer value) {
            addCriterion("problemmodule >", value, "problemmodule");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleGreaterThanOrEqualTo(Integer value) {
            addCriterion("problemmodule >=", value, "problemmodule");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleLessThan(Integer value) {
            addCriterion("problemmodule <", value, "problemmodule");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleLessThanOrEqualTo(Integer value) {
            addCriterion("problemmodule <=", value, "problemmodule");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleIn(List<Integer> values) {
            addCriterion("problemmodule in", values, "problemmodule");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleNotIn(List<Integer> values) {
            addCriterion("problemmodule not in", values, "problemmodule");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleBetween(Integer value1, Integer value2) {
            addCriterion("problemmodule between", value1, value2, "problemmodule");
            return (Criteria) this;
        }

        public Criteria andProblemmoduleNotBetween(Integer value1, Integer value2) {
            addCriterion("problemmodule not between", value1, value2, "problemmodule");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveIsNull() {
            addCriterion("problemcisactive is null");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveIsNotNull() {
            addCriterion("problemcisactive is not null");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveEqualTo(Integer value) {
            addCriterion("problemcisactive =", value, "problemcisactive");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveNotEqualTo(Integer value) {
            addCriterion("problemcisactive <>", value, "problemcisactive");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveGreaterThan(Integer value) {
            addCriterion("problemcisactive >", value, "problemcisactive");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveGreaterThanOrEqualTo(Integer value) {
            addCriterion("problemcisactive >=", value, "problemcisactive");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveLessThan(Integer value) {
            addCriterion("problemcisactive <", value, "problemcisactive");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveLessThanOrEqualTo(Integer value) {
            addCriterion("problemcisactive <=", value, "problemcisactive");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveIn(List<Integer> values) {
            addCriterion("problemcisactive in", values, "problemcisactive");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveNotIn(List<Integer> values) {
            addCriterion("problemcisactive not in", values, "problemcisactive");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveBetween(Integer value1, Integer value2) {
            addCriterion("problemcisactive between", value1, value2, "problemcisactive");
            return (Criteria) this;
        }

        public Criteria andProblemcisactiveNotBetween(Integer value1, Integer value2) {
            addCriterion("problemcisactive not between", value1, value2, "problemcisactive");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringIsNull() {
            addCriterion("problemanswerstring is null");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringIsNotNull() {
            addCriterion("problemanswerstring is not null");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringEqualTo(String value) {
            addCriterion("problemanswerstring =", value, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringNotEqualTo(String value) {
            addCriterion("problemanswerstring <>", value, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringGreaterThan(String value) {
            addCriterion("problemanswerstring >", value, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringGreaterThanOrEqualTo(String value) {
            addCriterion("problemanswerstring >=", value, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringLessThan(String value) {
            addCriterion("problemanswerstring <", value, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringLessThanOrEqualTo(String value) {
            addCriterion("problemanswerstring <=", value, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringLike(String value) {
            addCriterion("problemanswerstring like", value, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringNotLike(String value) {
            addCriterion("problemanswerstring not like", value, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringIn(List<String> values) {
            addCriterion("problemanswerstring in", values, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringNotIn(List<String> values) {
            addCriterion("problemanswerstring not in", values, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringBetween(String value1, String value2) {
            addCriterion("problemanswerstring between", value1, value2, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerstringNotBetween(String value1, String value2) {
            addCriterion("problemanswerstring not between", value1, value2, "problemanswerstring");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailIsNull() {
            addCriterion("problemanswerdetail is null");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailIsNotNull() {
            addCriterion("problemanswerdetail is not null");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailEqualTo(String value) {
            addCriterion("problemanswerdetail =", value, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailNotEqualTo(String value) {
            addCriterion("problemanswerdetail <>", value, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailGreaterThan(String value) {
            addCriterion("problemanswerdetail >", value, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailGreaterThanOrEqualTo(String value) {
            addCriterion("problemanswerdetail >=", value, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailLessThan(String value) {
            addCriterion("problemanswerdetail <", value, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailLessThanOrEqualTo(String value) {
            addCriterion("problemanswerdetail <=", value, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailLike(String value) {
            addCriterion("problemanswerdetail like", value, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailNotLike(String value) {
            addCriterion("problemanswerdetail not like", value, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailIn(List<String> values) {
            addCriterion("problemanswerdetail in", values, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailNotIn(List<String> values) {
            addCriterion("problemanswerdetail not in", values, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailBetween(String value1, String value2) {
            addCriterion("problemanswerdetail between", value1, value2, "problemanswerdetail");
            return (Criteria) this;
        }

        public Criteria andProblemanswerdetailNotBetween(String value1, String value2) {
            addCriterion("problemanswerdetail not between", value1, value2, "problemanswerdetail");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table problem
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 30 14:26:05 CST 2018
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table problem
     *
     * @mbg.generated Mon Apr 30 14:26:05 CST 2018
     */
    public static class Criterion implements Serializable {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}